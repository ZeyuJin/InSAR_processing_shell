#!/usr/bin/csh -f
#       $Id$
# Written by Zeyu Jin on 3rd. April, 2019
# Make sure that dem.grd existed in the dir

if ($#argv != 3) then
   echo ""
   echo "Usage: proj_fault_ll2ra.csh  trans.dat  fault_ll.txt  fault_ra.txt"
   echo "       trans.dat     - file generated by llt_grid2rat  (r a topo lon lat)"
   echo "       fault_ll.txt  - an ASCII file of fault trace in lon/lat (lon lat topo)"
   echo "       fault_ra.txt  - an ASCII file of fault trace in r/a (r a topo_ra)"
   echo "The topo information for each point is needed to compute the right r/a,"
   echo "extracted using grdtrack from GMT"
   echo ""
   exit 1
endif

unset noclobber
rm -f $3
rm -f tmp_ll tmp_ra points.dat

if (! -f dem.grd) then
   echo "Lack of dem.grd!"
   exit 1
endif

set infile = $2
set outfile = $3
awk '{print $1"::"$2}' $infile > tmp_ll  # to use :: not space as the delimiter (foreach)
set flag = 0
set count = 0
set w_lines = `wc -l tmp_ll | awk '{print $1}'`    # number of lines in the file

foreach line (`awk '{print $0}' tmp_ll`)
   set lon = `echo $line | awk -F'::' '{print $1}'`
   set lat = `echo $line | awk -F'::' '{print $2}'` 
   @ count++

   if ($lon != 370.0000) then
      echo $lon $lat >> points.dat
   else if ($lon == 370.0000) then
      gmt grdtrack points.dat -nl -T -Gdem.grd > llt
      proj_ll2ra_ascii.csh $1 llt rat
      awk '{print $1,$2}' rat >> tmp_ra
      echo 370.0000 0 >> tmp_ra

      @ flag = $flag + 1
      echo ""
      echo "This is the No. $flag trace..."
      echo ""
      rm -f points.dat rat
   else
      echo "There is something wrong in the file!"
   endif
end

rm -f tmp_ll
mv tmp_ra $outfile
